class NewStr():
    def __init__(self, st):
        self.st = st

    def __len__(self):
        return len(self.st)

    def __eq__(self, other):
        if type(other) not in [str, NewStr]:
            raise ValueError('Сравнение NewStr не с строкой')
        if len(self.st) == len(other):
            return True
        else:
            return False

    def __lt__(self, other):
        if type(other) not in [str, NewStr]:
            raise ValueError('Сравнение NewStr не с строкой')
        if len(self.st) < len(other):
            return True
        else:
            return False

    def __gt__(self, other):
        if type(other) not in [str, NewStr]:
            raise ValueError('Сравнение NewStr не с строкой')
        if len(self.st) > len(other):
            return True
        else:
            return False

    def __ne__(self, other):
        if type(other) not in [str, NewStr]:
            raise ValueError('Сравнение NewStr не с строкой')
        if len(self.st) != len(other):
            return True
        else:
            return False

    def __le__(self, other):
        if type(other) not in [str, NewStr]:
            raise ValueError('Сравнение NewStr не с строкой')
        if len(self.st) <= len(other):
            return True
        else:
            return False

    def __ge__(self, other):
        if type(other) not in [str, NewStr]:
            raise ValueError('Сравнение NewStr не с строкой')
        if len(self.st) >= len(other):
            return True
        else:
            return False


a = NewStr('hkjl')
b = 'hjlk'
print(a == b)
